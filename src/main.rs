use minifb::{Window, WindowOptions, Key};
use std::time::Duration;

mod framebuffer;

use crate::framebuffer::Framebuffer;

fn dibujar_patron(framebuffer: &mut Framebuffer, x: usize, y: usize, pattern: &[(usize, usize)]) {
    for &(dx, dy) in pattern {
        framebuffer.point(x + dx, y + dy);
    }
}

fn actualizar_mapa(mapa: &mut Vec<Vec<bool>>, width: usize, height: usize) {
    let puntos = [
        (-1, -1), (-1, 0), (-1, 1),
        (0, -1),         (0, 1),
        (1, -1), (1, 0), (1, 1),
    ];

    let mut nuevo_mapa = mapa.clone();

    for y in 0..height {
        for x in 0..width {
            let mut vecinos_vivos = 0;

            for &(dx, dy) in &puntos {
                let nx = x as isize + dx;
                let ny = y as isize + dy;

                if nx >= 0 && nx < width as isize && ny >= 0 && ny < height as isize {
                    if mapa[ny as usize][nx as usize] {
                        vecinos_vivos += 1;
                    }
                }
            }

            nuevo_mapa[y][x] = match (mapa[y][x], vecinos_vivos) {
                (true, 2) | (true, 3) => true,
                (true, _) => false,
                (false, 3) => true,
                (false, _) => false,
            };
        }
    }

    *mapa = nuevo_mapa;
}

fn dibujar_pulsar(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let pulsar = [
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ];
    dibujar_patron(framebuffer, x, y, &pulsar);
}

fn dibujar_glider(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let glider = [(0, 1), (1, 2), (2, 0), (2, 1), (2, 2)];
    dibujar_patron(framebuffer, x, y, &glider);
}

fn dibujar_mws(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let mws = [
        (0, 2), (0, 3), (0, 4), (0, 5),
        (1, 1), (1, 5),
        (2, 5),
        (3, 1), (3, 4),
        (4, 3),
    ];
    dibujar_patron(framebuffer, x, y, &mws);
}

fn dibujar_pentomimo(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let r_pentomino = [
        (0, 1), (1, 1), (1, 2), (2, 1), (2, 0),
    ];
    dibujar_patron(framebuffer, x, y, &r_pentomino);
}

fn dibujar_glider_gun(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let glider_gun = [
        (1, 5), (1, 6), (2, 5), (2, 6), (11, 3), (11, 4), (12, 2), (12, 6),
        (13, 1), (13, 7), (14, 1), (14, 7), (15, 2), (15, 6), (16, 3), (16, 4),
        (17, 4), (17, 5), (18, 3), (18, 4), (18, 5), (19, 4), (21, 2), (21, 3),
        (21, 4), (22, 1), (22, 5), (23, 1), (23, 5), (25, 2), (25, 3), (25, 4),
        (26, 3), (26, 4), (26, 5)
    ];
    dibujar_patron(framebuffer, x, y, &glider_gun);
}

fn dibujar_puffer_train(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let puffer_train = [
        (0, 1), (1, 0), (1, 1), (1, 2), (2, 1), (3, 1), (4, 1), (4, 2),
        (5, 1), (5, 2), (6, 1), (6, 2), (7, 1), (8, 1), (8, 2), (8, 3),
        (9, 1), (10, 1), (10, 2), (11, 2), (12, 1), (12, 2)
    ];
    dibujar_patron(framebuffer, x, y, &puffer_train);
}

fn gibujar_blinker(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let blinker = [
        (1, 0), (1, 1), (1, 2),
    ];
    dibujar_patron(framebuffer, x, y, &blinker);
}
fn dibujar_bi_block(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let bi_block = [
        (0, 0), (0, 1), (1, 0), (1, 1),
        (3, 0), (3, 1), (4, 0), (4, 1),
        (6, 1), (7, 1), (6, 2), (7, 2),
        (8, 3), (8, 4), (9, 3), (9, 4),
        (6, 5), (7, 5), (6, 6), (7, 6),
        (0, 7), (0, 8), (1, 7), (1, 8),
        (3, 7), (3, 8), (4, 7), (4, 8),
    ];
    dibujar_patron(framebuffer, x, y, &bi_block);
}

fn dibujar_achim(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let achims_other_p16 = [
        (2, 0), (3, 0), (9, 0), (10, 0),
        (1, 1), (4, 1), (8, 1), (11, 1),
        (0, 2), (5, 2), (7, 2), (12, 2),
        (0, 3), (3, 3), (9, 3), (12, 3),
        (0, 4), (5, 4), (7, 4), (12, 4),
        (1, 5), (4, 5), (8, 5), (11, 5),
        (2, 6), (3, 6), (9, 6), (10, 6),
    ];
    dibujar_patron(framebuffer, x, y, &achims_other_p16);
}

fn dibujar_pentadecathlon(framebuffer: &mut Framebuffer, x: usize, y: usize) {
    let pentadecathlon = [
        (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10),
        (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10),
        (1, 0), (1, 11)
    ];
    dibujar_patron(framebuffer, x, y, &pentadecathlon);
}

fn main() {
    let window_width = 800;
    let window_height = 600;
    let framebuffer_width = 80;
    let framebuffer_height = 60;

    let mut framebuffer = Framebuffer::new(framebuffer_width, framebuffer_height);

    let mut window = Window::new(
        "Laboratorio 2 GC",
        window_width,
        window_height,
        WindowOptions::default(),
    ).unwrap();

    framebuffer.set_background_color(0x000000);
    framebuffer.set_current_color(0x0000FF);

    let mut mapa = vec![vec![false; framebuffer_width]; framebuffer_height];

   
    dibujar_pulsar(&mut framebuffer, 0, 0);
    dibujar_pulsar(&mut framebuffer, framebuffer_width - 9, 0);
    dibujar_pulsar(&mut framebuffer, 0, framebuffer_height - 9);
    dibujar_pulsar(&mut framebuffer, framebuffer_width - 9, framebuffer_height - 9);
    dibujar_pulsar(&mut framebuffer, framebuffer_width - 5, 0);

    
    let center_x = framebuffer_width / 2;
    let center_y = framebuffer_height / 2;

    
    dibujar_glider(&mut framebuffer, center_x - 12, center_y - 12);
    dibujar_glider(&mut framebuffer, center_x + 12, center_y - 12);
    dibujar_glider(&mut framebuffer, center_x - 12, center_y + 12);
    dibujar_glider(&mut framebuffer, center_x + 12, center_y + 12);
    dibujar_bi_block(&mut framebuffer, center_x - 5, center_y - 5);
    dibujar_achim(&mut framebuffer, center_x - 10, center_y + 10);

    
    dibujar_mws(&mut framebuffer, center_x - 5, center_y - 5);
    dibujar_mws(&mut framebuffer, center_x - 5, center_y - 5);
    dibujar_mws(&mut framebuffer, center_x - 5, center_y - 5);

    
    gibujar_blinker(&mut framebuffer, framebuffer_width / 2 - 1, framebuffer_height / 2);
    gibujar_blinker(&mut framebuffer, framebuffer_width / 2 - 1, framebuffer_height / 2);
    gibujar_blinker(&mut framebuffer, framebuffer_width / 2 - 1, framebuffer_height / 2);

    
    let mut iniciar_mapa = |patterns: &[(usize, usize)], offset_x: usize, offset_y: usize| {
        for &(dx, dy) in patterns {
            if offset_x + dx < framebuffer_width && offset_y + dy < framebuffer_height {
                mapa[offset_y + dy][offset_x + dx] = true;
            }
        }
    };

    let bi_block = [
        (0, 0), (0, 1), (1, 0), (1, 1),
        (3, 0), (3, 1), (4, 0), (4, 1),
        (6, 1), (7, 1), (6, 2), (7, 2),
        (8, 3), (8, 4), (9, 3), (9, 4),
        (6, 5), (7, 5), (6, 6), (7, 6),
        (0, 7), (0, 8), (1, 7), (1, 8),
        (3, 7), (3, 8), (4, 7), (4, 8),
    ];
    iniciar_mapa(&bi_block, center_x - 5, center_y - 5);

    let achims_other_p16 = [
        (2, 0), (3, 0), (9, 0), (10, 0),
        (1, 1), (4, 1), (8, 1), (11, 1),
        (0, 2), (5, 2), (7, 2), (12, 2),
        (0, 3), (3, 3), (9, 3), (12, 3),
        (0, 4), (5, 4), (7, 4), (12, 4),
        (1, 5), (4, 5), (8, 5), (11, 5),
        (2, 6), (3, 6), (9, 6), (10, 6),
    ];
    iniciar_mapa(&achims_other_p16, center_x - 10, center_y + 10);


    
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 25,30);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 5,5);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 5,20);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 5,30);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 5,40);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 5,50);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 10,0);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 10, 10);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 10,20);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 10,30);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 10,40);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 10,50);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 25,0);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 20,0);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 30,0);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 30,10);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 30,20);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 30,30);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 30,40);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 30,50);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 50,0);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 50,10);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 50,20);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 50,30);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 50,40);

    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 50,50);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 70,0);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 70,10);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 70,20);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 70,30);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 70,40);
    iniciar_mapa(&[
        (0, 2), (0, 3), (0, 4), (0, 7), (0, 8), (0, 9),
        (1, 1), (1, 5), (1, 6), (1, 10), (1, 11), (1, 12),
        (2, 0), (2, 1), (2, 5), (2, 6), (2, 10), (2, 11),
        (3, 0), (3, 5), (3, 6), (3, 10), (3, 11),
        (4, 0), (4, 5), (4, 6), (4, 10), (4, 11),
        (5, 0), (5, 5), (5, 6), (5, 10), (5, 11),
        (6, 1), (6, 5), (6, 6), (6, 10), (6, 11),
        (7, 2), (7, 3), (7, 4), (7, 7), (7, 8), (7, 9),
        (8, 2), (8, 3), (8, 4), (8, 7), (8, 8), (8, 9),
    ], 70,50);
    

    let frame_delay = Duration::from_millis(100);

    while window.is_open() && !window.is_key_down(Key::Escape) {
        framebuffer.clear();

        for y in 0..framebuffer_height {
            for x in 0..framebuffer_width {
                if mapa[y][x] {
                    framebuffer.point(x, y);
                }
            }
        }

        window
            .update_with_buffer(&framebuffer.buffer, framebuffer_width, framebuffer_height)
            .unwrap();

        actualizar_mapa(&mut mapa, framebuffer_width, framebuffer_height);

        std::thread::sleep(frame_delay);
    }
}